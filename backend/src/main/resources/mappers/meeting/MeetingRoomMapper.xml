<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spec.plun.meeting.room.MeetingRoomDAO">

  <!-- ========== 생성 ==========
       비공개/비밀번호 컬럼 제거 버전 -->
  <insert id="insert"
          parameterType="com.spec.plun.meeting.room.MeetingRoom"
          useGeneratedKeys="true" keyProperty="roomNo">
    INSERT INTO tb_meeting_room
      (team_no, title, scheduled_time, scheduled_end_time, room_code, cal_detail_no)
    VALUES
      (#{teamNo},
       #{title},
       #{scheduledTime},
       #{scheduledEndTime},
       #{roomCode},
       #{calDetailNo})
  </insert>

  <!-- room_code 중복 체크 -->
  <select id="findByCode"
          resultType="com.spec.plun.meeting.room.MeetingRoom">
    SELECT *
    FROM tb_meeting_room
    WHERE room_code = #{roomCode}
    LIMIT 1
  </select>

  <!-- room_no 조회 (수정/삭제용) -->
  <select id="findByRoomNo"
          resultType="com.spec.plun.meeting.room.MeetingRoom">
    SELECT *
    FROM tb_meeting_room
    WHERE room_no = #{roomNo}
    LIMIT 1
  </select>

  <!-- 종료되지 않은 회의 목록 (DTO) -->
  <select id="selectActiveByTeamAndMember" parameterType="map"
          resultType="com.spec.plun.meeting.dto.MeetingRoomListDto">
    SELECT
      mr.room_no               AS roomNo,
      mr.room_code             AS roomCode,
      mr.title                 AS title,
      mr.scheduled_time        AS scheduledTime,
      mr.scheduled_end_time    AS scheduledEndTime
    FROM tb_meeting_room mr
    INNER JOIN tb_meeting_participant mp
      ON mp.room_no = mr.room_no
     AND mp.user_no = #{userNo}
    WHERE mr.team_no = #{teamNo}
      AND mr.ended_time IS NULL
      AND (mr.scheduled_end_time IS NULL OR mr.scheduled_end_time >= #{now})
    ORDER BY
      mr.scheduled_time ASC,
      COALESCE(mr.scheduled_end_time, mr.scheduled_time) ASC,
      mr.room_no ASC
  </select>

  <!-- 사용자 역할 -->
  <select id="findRole" parameterType="map" resultType="string">
    SELECT role_no
    FROM tb_meeting_participant
    WHERE room_no = #{roomNo}
      AND user_no = #{userNo}
    LIMIT 1
  </select>

  <!-- 입/퇴장 로그 -->
  <update id="updateJoinTime">
    UPDATE tb_meeting_participant
       SET join_time = COALESCE(join_time, COALESCE(#{joinedAt}, NOW())),
           out_time  = NULL
     WHERE room_no = #{roomNo}
       AND user_no = #{userNo}
  </update>

  <update id="updateOutTime">
    UPDATE tb_meeting_participant
       SET out_time = COALESCE(#{leftAt}, NOW())
     WHERE room_no = #{roomNo}
       AND user_no = #{userNo}
  </update>

  <!-- 회의 참여자 벌크 INSERT
       * 중복 방지 필요하면 INSERT IGNORE 로 변경 가능 -->
  <insert id="insertParticipants">
    INSERT INTO tb_meeting_participant
      (room_no, role_no, user_no, join_time, out_time)
    VALUES
    <foreach collection="userIds" item="uid" separator=",">
      (#{roomNo}, #{roleNo}, #{uid}, #{joinTime}, NULL)
    </foreach>
  </insert>

  <!-- 회의방에 cal_detail_no 메모 -->
  <update id="updateCalDetailNo">
    UPDATE tb_meeting_room
       SET cal_detail_no = #{calDetailNo}
     WHERE room_no = #{roomNo}
  </update>

  <!-- 팀 달력 get-or-create -->
  <select id="findCalNoByTeamNo" resultType="int">
    SELECT cal_no
    FROM tb_calendar
    WHERE team_no = #{teamNo}
    LIMIT 1
  </select>

  <!-- 팀 달력 생성 (user_no 컬럼 사용) -->
  <insert id="insertTeamCalendar">
    INSERT INTO tb_calendar (team_no, user_no)
    VALUES (#{teamNo}, #{userNo})
  </insert>

  <!-- 방금 INSERT한 AUTO_INCREMENT 값 -->
  <select id="selectLastInsertId" resultType="int">
    SELECT LAST_INSERT_ID()
  </select>

  <!-- 달력상세 생성 -->
  <insert id="insertCalendarDetail">
    INSERT INTO tb_calendar_detail
      (cal_no, contents,
       start_date, start_time, end_date, end_time,
       delete_yn, create_date, reg_user_no, title)
    VALUES
      (#{calNo}, #{contents},
       #{startDate}, #{startTime}, #{endDate}, #{endTime},
       'N', NOW(), #{regUserNo}, #{title})
  </insert>

  <!-- 달력상세 참여자(생성자 제외) INSERT (중복 무시) -->
  <insert id="insertCalendarDetailParticipants">
    INSERT IGNORE INTO tb_calendar_detail_participant (cal_detail_no, user_no)
    VALUES
    <foreach collection="userIds" item="uid" separator=",">
      (#{calDetailNo}, #{uid})
    </foreach>
  </insert>

  <!-- 생성자 user_no -->
  <select id="selectCreatorUserNo" resultType="int">
    SELECT user_no
    FROM tb_meeting_participant
    WHERE room_no = #{roomNo}
      AND role_no = 'C001'
    LIMIT 1
  </select>

  <!-- 참가자 + 이름 -->
  <select id="selectParticipantsWithNames"
          resultType="com.spec.plun.meeting.dto.ParticipantDto">
    SELECT
      mp.user_no                                  AS userNo,
      COALESCE(m.name, CONCAT('사용자 #', mp.user_no)) AS name
    FROM tb_meeting_participant mp
    LEFT JOIN tb_member m ON m.user_no = mp.user_no
    WHERE mp.room_no = #{roomNo}
    ORDER BY
      CASE WHEN mp.role_no = 'C001' THEN 0 ELSE 1 END,
      mp.user_no
  </select>

  <!-- ========== ⬇ 수정/삭제용 추가 쿼리들 ========== -->

  <!-- 회의방 제목/시간 업데이트 -->
  <update id="updateMeetingRoom">
    UPDATE tb_meeting_room
       SET title = #{title},
           scheduled_time = #{start},
           scheduled_end_time = #{end}
     WHERE room_no = #{roomNo}
  </update>

  <!-- 달력상세 제목/시간 동기화 (분리 컬럼) -->
  <update id="updateCalendarDetail">
    UPDATE tb_calendar_detail
       SET title = #{title},
           start_date = #{startDate},
           start_time = #{startTime},
           end_date = #{endDate},
           end_time = #{endTime}
     WHERE cal_detail_no = #{calDetailNo}
  </update>

  <!-- 회의 참가자 전체/부분 조회·삭제 -->
  <select id="selectParticipantUserNos" resultType="int">
    SELECT user_no
    FROM tb_meeting_participant
    WHERE room_no = #{roomNo}
    ORDER BY user_no
  </select>

  <delete id="deleteParticipants">
    DELETE FROM tb_meeting_participant
    WHERE room_no = #{roomNo}
      AND user_no IN
      <foreach collection="userNos" item="u" open="(" separator="," close=")">#{u}</foreach>
  </delete>

  <delete id="deleteParticipantsAll">
    DELETE FROM tb_meeting_participant
    WHERE room_no = #{roomNo}
  </delete>

  <!-- 달력상세 참가자 조회·삭제 -->
  <select id="selectCalendarDetailParticipantUserNos" resultType="int">
    SELECT user_no
    FROM tb_calendar_detail_participant
    WHERE cal_detail_no = #{calDetailNo}
    ORDER BY user_no
  </select>

  <delete id="deleteCalendarDetailParticipants">
    DELETE FROM tb_calendar_detail_participant
    WHERE cal_detail_no = #{calDetailNo}
      AND user_no IN
      <foreach collection="userNos" item="u" open="(" separator="," close=")">#{u}</foreach>
  </delete>

  <delete id="deleteCalendarDetailParticipantsAll">
    DELETE FROM tb_calendar_detail_participant
    WHERE cal_detail_no = #{calDetailNo}
  </delete>

  <!-- 달력상세/회의방 삭제 (하드 삭제) -->
  <delete id="deleteCalendarDetail">
    DELETE FROM tb_calendar_detail
    WHERE cal_detail_no = #{calDetailNo}
  </delete>

  <delete id="deleteMeetingRoom">
    DELETE FROM tb_meeting_room
    WHERE room_no = #{roomNo}
  </delete>

</mapper>
